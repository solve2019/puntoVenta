/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ModuloVeterinaria;

import conexion.conex;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import jinternalPanel.EsteticaRep;

/**
 *
 * @author desarrollo8
 */
public class EditarServicio extends javax.swing.JDialog {
String idservicio="";
String fechainicial;
    /**
     * Creates new form EditarServicio
     */
    public EditarServicio(java.awt.Frame parent, boolean modal,String servicio) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        idservicio=servicio;
        conex con=new conex();  
            try {
                String categorias="";
                String myQuery = "select * from to_estetica where Id='"+idservicio+"'";
                System.out.println(""+myQuery);
                ResultSet rsR = null; 
                Statement st = con.getConnection().createStatement();
                rsR = st.executeQuery(myQuery);
                while(rsR.next()) {                                                
                        txtservicio.setText(rsR.getString("tipocorte"));       
                        txtfechaini.setDate(rsR.getDate("proxima_cita"));
                        fechainicial=rsR.getString("proxima_cita");
                        String horaserv=rsR.getString("hora_servicio");
                        String[] parts = horaserv.split(":");
                        String part1 = parts[0]; // hora
                        String part2 = parts[1]; // minutos
                        jchora.setSelectedItem(part1);
                        jcminuto.setSelectedItem(part2);
                        txtcomentario.setText(rsR.getString("comentario"));
                        txtevidenciacampo.setText(rsR.getString("evidenciacampo")); 
                        if(rsR.getDate("sigservicio")==null){
                        }else{
                            txtsigserv.setDate(rsR.getDate("sigservicio"));
                        }
                        txttecnico.setText(rsR.getString("tecnico_asignado")); 
                        
                }                
                rsR.close();
                st.close();
                con.desconectar();                  
            } catch (SQLException ex) {       
                JOptionPane.showMessageDialog(null, "Error al obtener datos del servicio: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
            }  
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtservicio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtfechaini = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jchora = new javax.swing.JComboBox<>();
        jcminuto = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtcomentario = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtevidenciacampo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtsigserv = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        txttecnico = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edici√≥n de servicio");

        jPanel1.setBackground(new java.awt.Color(248, 244, 244));

        jLabel1.setText("Orden de servicio:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/palomita.png"))); // NOI18N
        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha servicio programado:");

        jLabel18.setText("Horario:");

        jchora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jchora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        jcminuto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcminuto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "15", "30", "45" }));

        jLabel19.setText("Comentario:");

        txtcomentario.setColumns(20);
        txtcomentario.setRows(5);
        jScrollPane2.setViewportView(txtcomentario);

        jLabel3.setText("Evidencia en Campo:");

        jLabel4.setText("Fecha Sig. Servicio:");

        jLabel20.setText("Tecnico Asignado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtservicio))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txttecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(72, 72, 72)
                                        .addComponent(jchora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcminuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfechaini, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 333, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtevidenciacampo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtsigserv, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtservicio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtfechaini, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jchora, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcminuto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtevidenciacampo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4))
                    .addComponent(txtsigserv, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         Date fecha=txtfechaini.getDate();    
         Date fechasigser=txtsigserv.getDate(); 
         SimpleDateFormat fechaformateadainicial = new SimpleDateFormat("yyyy-MM-dd");  
         String fechaser=fechaformateadainicial.format(fecha);
         System.out.println(fechaser+"!="+fechainicial);
        if(!fechaser.equals(fechainicial)){
            JOptionPane.showMessageDialog(null, "Se realizara reprogramacion con la siguiente fecha: "+fechaser, "Reprogramacion", JOptionPane.ERROR_MESSAGE);
        }
        if(txtservicio.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Falta ingresar la orden de servicio.", "Validacion campos", JOptionPane.ERROR_MESSAGE);
        }else if(txtevidenciacampo.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Falta ingresar la evidencia de campo.", "Validacion campos", JOptionPane.ERROR_MESSAGE);
        }else if(fecha==null){
            JOptionPane.showMessageDialog(null, "Falta ingresar la fecha de servicio.", "Validacion campos", JOptionPane.ERROR_MESSAGE);
        }/*else if(fechasigser==null){
            JOptionPane.showMessageDialog(null, "Falta ingresar la fecha del proximo servicio.", "Validacion campos", JOptionPane.ERROR_MESSAGE);
        }*/else{
            boolean existe=existeorden(txtservicio.getText().trim());
            boolean existeECampo=existeevidenciacampo(txtevidenciacampo.getText().trim());
            if(existe==false && existeECampo==false){
                SimpleDateFormat fechaformateada = new SimpleDateFormat("yyyy-MM-dd");  
                String fechaformateadas=fechaformateada.format(fecha);
                String fechasigserv="";
                String sql22="";
                if(fechasigser==null){                    
                }else{
                    fechasigserv=fechaformateada.format(fechasigser);
                    sql22=", sigservicio='"+fechasigserv+"'";
                }
                
                conex con=new conex();  
                try {
                    String categorias="";
                    String myQuery = "update to_estetica set tecnico_asignado='"+txttecnico.getText().trim()+"', evidenciacampo='"+txtevidenciacampo.getText().trim()+"'"+sql22+", comentario='"+txtcomentario.getText().trim()+"', hora_servicio='"+jchora.getSelectedItem().toString()+":"+jcminuto.getSelectedItem().toString()+"', proxima_cita='"+fechaformateadas+"', tipocorte='"+txtservicio.getText().trim()+"' where Id='"+idservicio+"'";
                    System.out.println(""+myQuery);
                    Statement st = con.getConnection().createStatement();
                    st.executeUpdate(myQuery);                
                    st.close();
                    con.desconectar();   
                    try{
                        EsteticaRep.cargartabla();              
                    }catch( java.lang.NullPointerException e){
                    }
                          
                    JOptionPane.showMessageDialog(null, "Se actualizo el servicio correctamente", "OK", JOptionPane.INFORMATION_MESSAGE);
                    try{
                        NotificacionesDiarias.cargartablaestetica();
                        NotificacionesDiarias.cargartablaproxservicio();        
                    }catch( java.lang.NullPointerException e){
                    }
                    
                    dispose();
                } catch (SQLException ex) {       
                    JOptionPane.showMessageDialog(null, "Error al obtener datos del servicio: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                }  
            }else{
                JOptionPane.showMessageDialog(null, "La orden de servicio "+txtservicio.getText().trim()+" ya esta registrada en otro servicio o la evidencia en campo: "+txtevidenciacampo.getText().trim()+".", "Validacion campos", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditarServicio dialog = new EditarServicio(new javax.swing.JFrame(), true,"");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jchora;
    private javax.swing.JComboBox<String> jcminuto;
    private javax.swing.JTextArea txtcomentario;
    private javax.swing.JTextField txtevidenciacampo;
    private com.toedter.calendar.JDateChooser txtfechaini;
    private javax.swing.JTextField txtservicio;
    private com.toedter.calendar.JDateChooser txtsigserv;
    private javax.swing.JTextField txttecnico;
    // End of variables declaration//GEN-END:variables

public boolean existeorden(String ordenservicio){
     boolean existe=false;
     
            conex con=new conex();   
            ResultSet rsR = null;        
            String myQuery = "select tipocorte from to_estetica where Id!='"+idservicio+"' and (estatus='ABIERTA' or estatus='CERRADA') and tipocorte='"+ordenservicio+"'";
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                          existe=true;  
                   }                                      
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                   existe=true;  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }   
     
     return existe;
   } 


public boolean existeevidenciacampo(String ordenservicio){
     boolean existe=false;
     
            conex con=new conex();   
            ResultSet rsR = null;        
            String myQuery = "select evidenciacampo from to_estetica where Id!='"+idservicio+"' and (estatus='ABIERTA' or estatus='CERRADA') and evidenciacampo='"+ordenservicio+"'";
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                          existe=true;  
                   }                                      
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                   existe=true;  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }   
     
     return existe;
   } 

}
